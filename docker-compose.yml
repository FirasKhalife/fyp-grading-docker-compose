version: '3.7'
name: fyp-grading

services:
  api-gateway:
    build:
      context: ../fyp-grading-api-gateway
    image: api-gateway
    container_name: api-gateway
    ports:
      - '9191:9191'
    environment:
      - eureka.client.serviceUrl.defaultZone=http://registry-service:8761/eureka/
      - spring.data.redis.host=redis
    networks:
      - fyp-grading
    deploy:
      replicas: 1
    depends_on:
      - redis

  redis:
    image: redis
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - fyp-grading
    environment:
      - spring.data.redis.host=redis

  registry-service:
    build:
      context: ../fyp-grading-registry-service
    image: registry-service:1.0
    container_name: registry-service
    ports:
      - '8761:8761'
    expose:
      - 8761
    networks:
      - fyp-grading

  config-server:
    build:
      context: ../fyp-grading-config-server
    image: config-server:1.0
    container_name: config-server
    environment:
      - SPRING_PROFILES_ACTIVE=git,prod
      - GIT_REPO_URI=https://github.com/FirasKhalife/fyp-grading-config.git
      - GIT_BRANCH=cloud-course
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - PORT=8071
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    expose:
      - 8071
    networks:
      - fyp-grading

  rabbitmq:
    image: rabbitmq:4.0-rc-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    expose:
      - 5672
      - 15672
    networks:
      - fyp-grading

  frontend:
    build:
      context: ../fyp-grading-frontend
    image: frontend
    container_name: frontend
    ports:
      - '80:80'
    expose:
      - 80
    networks:
      - fyp-grading

  admin-service:
    build:
      context: ../fyp-grading-admin-service
    image: admin-service:1.0
    container_name: admin-service
#    deploy:
#      replicas: 2
    environment:
      - DATABASE_URL=jdbc:postgresql://admin-db:5432/admin-db
      - DATABASE_USERNAME=admin
      - DATABASE_PASSWORD=admin
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - REGISTRY_SERVICE_URL=${REGISTRY_SERVICE_URL}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - PORT=8080
#      - spring.data.redis.host=redis
    depends_on:
      config-server:
        condition: service_healthy
#      - registry-service
      admin-db:
        condition: service_healthy
#      - redis
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    expose:
      - 8080
    networks:
      - fyp-grading

  admin-db:
    image: postgres:latest
    container_name: admin-db
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: admin-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d admin-db -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    expose:
      - 5432
    networks:
      - fyp-grading

  evaluation-service:
    build:
      context: ../fyp-grading-evaluation-service
    image: evaluation-service:1.0
    container_name: evaluation-service
#    deploy:
#      replicas: 2
    environment:
      - DATABASE_URL=mongodb://admin:admin@mongodb:27017/evaluation-db?authSource=admin&authMechanism=SCRAM-SHA-1
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - REGISTRY_SERVICE_URL=${REGISTRY_SERVICE_URL}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - PORT=8080
#      - spring.data.redis.host=redis
    depends_on:
      config-server:
        condition: service_healthy
#      - registry-service
      mongodb:
        condition: service_healthy
#      - redis
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    expose:
      - 8080
    networks:
      - fyp-grading

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: evaluation-db
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    healthcheck:
      test: ["CMD-SHELL", "mongo --eval 'db.adminCommand(\"ping\")'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    expose:
      - 27017
    networks:
      - fyp-grading

  notification-service:
    build:
      context: ../fyp-grading-notification-service
    image: notification-service:1.0
    container_name: notification-service
#    deploy:
#      replicas: 1
    environment:
      - DATABASE_URL=jdbc:postgresql://notification-db:5432/notification-db
      - DATABASE_USERNAME=admin
      - DATABASE_PASSWORD=admin
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - REGISTRY_SERVICE_URL=${REGISTRY_SERVICE_URL}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - PORT=8080
#      - spring.data.redis.host=redis
    depends_on:
      config-server:
        condition: service_healthy
#      - registry-service
      notification-db:
        condition: service_healthy
#      - redis
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    expose:
      - 8080
    networks:
      - fyp-grading

  notification-db:
    image: postgres:latest
    container_name: notification-db
    ports:
      - '5434:5432'
    environment:
      POSTGRES_DB: notification-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d admin-db -U admin" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    expose:
      - 5434
    networks:
      - fyp-grading

  rubric-service:
    build:
      context: ../fyp-grading-rubric-service
    image: rubric-service:1.0
    container_name: rubric-service
#    deploy:
#        replicas: 1
    environment:
      - DATABASE_URL=jdbc:postgresql://rubric-db:5432/rubric-db
      - DATABASE_USERNAME=admin
      - DATABASE_PASSWORD=admin
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - REGISTRY_SERVICE_URL=${REGISTRY_SERVICE_URL}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - PORT=8080
    depends_on:
      config-server:
        condition: service_healthy
#      - registry-service
      rubric-db:
        condition: service_healthy
#      - redis
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    expose:
      - 8080
    networks:
      - fyp-grading

  rubric-db:
    image: postgres:latest
    container_name: rubric-db
    ports:
      - '5433:5432'
    environment:
      POSTGRES_DB: rubric-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d admin-db -U admin" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    expose:
      - 5433
    networks:
      - fyp-grading

networks:
  fyp-grading:
    driver: bridge
